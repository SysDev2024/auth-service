spring.application.name=authService
app.name=authService
app.version=v1
app.description=Microservice for authentifisering og registering av brukere.
app.author=Gruppe 11
server.port=8111

### Eureka Configuration ####
eureka.client.serviceUrl.defaultZone=http://${EUREKA_HOST:127.0.0.1}:8761/eureka/
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=false


### MySQL Configuration ####
## This uses an environment variable MYSQL_HOST set in the docker-compose. To test you can use the spring profile test. that should use the H2 database. Or you can connect any other database
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:127.0.0.1}/prodDB?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=service
spring.datasource.password=service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true


### JWT Configuration ####
jwt.secret=305c300d06092a864886f70d0101010500034b0030480241009959b6f694e87d8bbb98f73c1a21a5d5b8b36de60fc26d74cadaabb10b1590d1bfccfe0b87020f835490435759b2daaff8b0282eebc2730e06126a0cff0d10170203010001


### Mail Configuration ####
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=magnusgjerstad00@gmail.com
spring.mail.password=jzwo ifdr noak tlds 
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


